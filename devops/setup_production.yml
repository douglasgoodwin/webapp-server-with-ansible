---

- hosts: mullen_production
  user: ubuntu
  sudo: yes

  tasks:

    - name: update apt
      apt: update_cache=yes

    - name: install initial packages
      action: apt pkg=$item state=installed
      with_items:
        - build-essential
        - python-software-properties
        - htop
        - nmap
        - vim-nox
        - ufw
        - python2.7
        - software-properties-common
        - python-pil
        - cython
        - python-lxml
        - libxml2-dev
        - libxslt1-dev
        - openssh-client
        - make
        - build-essential
        - tcl8.5

    - name: add nginx ppas
      action: apt_repository repo=$item state=present
      with_items:
        - ppa:nginx/stable

    - name: install main packages for python nginx
      action: apt pkg=$item state=installed
      with_items:
        - git-core
        - libcurl4-openssl-dev
        - libfreetype6
        - libfreetype6-dev
        - libjpeg62
        - libjpeg62-dev
        - libmariadbclient-dev
        - libmariadbd-dev
        - mysql-client
        - nginx
        - python-dev
        - python-imaging
        - python-mysqldb
        - python-pip
        - python-pycurl
        - python-redis
        - python-setuptools
        - redis-server
        - zlib1g-dev


  
    - name: 1a. Add APT GPG signing key
      apt_key: url=http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xCBCB082A1BB943DB state=present

    - name: 1b. Add APT repository
      apt_repository: repo='deb http://ftp.osuosl.org/pub/mariadb/repo/10.0/ubuntu $ansible_distribution_release main' state=present update_cache=yes
      
    - name: 1c. Install MariaDB server package
      apt: name=mariadb-server state=present

    - name: 2. Start Mysql Service
      service: name=mysql state=started enabled=true

    - name: Install python Mysql package #required for mysql_db tasks
      apt: name=python-mysqldb state=present

    - name: install pip
      action: easy_install name=pip

    - name: install various libraries with pip
      action: pip name=$item state=present
      with_items:
        - virtualenv
        - supervisor
        - uwsgi

    - name: symlink imaging library files
      action: file src=/usr/include/freetype2 dest=/usr/include/freetype state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libfreetype.so dest=/usr/lib/libfreetype.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libz.so dest=/usr/lib/libz.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libjpeg.so.62 dest=/usr/lib/x86_64-linux-gnu/libjpeg.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libjpeg.so dest=/usr/lib/libjpeg.so state=link

    - name: remove default nginx site
      action: file path=/etc/nginx/sites-enabled/default state=absent

    - name: write nginx.conf
      action: template src=templates/nginx.conf dest=/etc/nginx/nginx.conf

    - name: create supervisord config folder
      action: file dest=/etc/supervisor state=directory owner=root

    - name: create supervisord config
      action: template src=templates/supervisord.conf dest=/etc/supervisord.conf

    - name: create supervisord init script
      action: template src=templates/supervisord.sh dest=/etc/init.d/supervisord mode=0755

    - name: start supervisord service and have it run during system startup
      action: service name=supervisord state=started enabled=yes

    - name: create webapps directory
      action: file dest=/srv/webapps state=directory


     # redis
    - name: download latest stable redis
      get_url: url=http://download.redis.io/redis-stable.tar.gz dest=/tmp/redis-stable.tar.gz

    - name: untar redis
      command: tar zxf /tmp/redis-stable.tar.gz -C /tmp

    - name: build redis
      command: make -C /tmp/redis-stable

    - name: create redis group
      group: name=redis state=present system=yes

    - name: create redis user
      user: name=redis group=redis createhome=no shell=/bin/false system=yes state=present

    - name: make sure that /etc/redis exists
      file: path=/etc/redis state=directory mode=0755

    - name: make sure that /var/db/redis exists
      file: path=/var/db/redis state=directory mode=0755 group=redis owner=redis

    - name: make sure redis.log file exists
      copy: src=templates/redis.log dest=/var/log/redis.log owner=redis group=redis mode=0644

    - name: copy upstart file
      copy: src=templates/upstart.conf dest=/etc/init/redis.conf

    - name: copy redis.conf file
      copy: src=templates/redis.conf dest=/etc/redis/redis.conf group=redis owner=redis

    - name: copy custom template
      template: src=templates/redis.local.conf.j2 dest=/etc/redis/redis.local.conf group=redis owner=redis

    - name: copy redis-local script
      template: src=templates/redis-local.j2 dest=/usr/local/bin/redis-local mode=0755

    - name: installing redis binaries
      command: cp /tmp/redis-stable/src/{{ item }} /usr/local/bin
      with_items: 
        - redis-server
        - redis-cli
        - redis-check-aof
        - redis-check-dump

    - name: cleaning up build files
      command: rm -rf /tmp/{{ item }}
      with_items:
        - redis-stable
        - redis-stable.tar.gz

    - name: ensure redis service is restarted
      service: name=redis state=restarted













  handlers:
    # - name: restart maria
    #   action: service name=mysql state=restarted

    - name: restart supervisord
      action: service name=supervisord state=restarted
