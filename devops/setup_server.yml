---

- hosts: mullen_production
  user: ubuntu
  sudo: yes

  vars:
    app_name: hello_flask
    repo_url: https://github.com/mattupstate/ansible-tutorial.git
    repo_remote: origin
    repo_version: master
    webapps_dir: /srv/webapps
    wsgi_file: wsgi.py
    wsgi_callable: app

  tasks:

    - name: install initial packages
      action: apt pkg=$item state=installed
      with_items:
        - build-essential
        - python-software-properties
        - htop
        - nmap
        - vim-nox
        - ufw
        - python2.7
        - software-properties-common

    - name: add nginx ppas
      action: apt_repository repo=ppa:nginx/stable state=present

    - name: install main packages for python node nginx
      action: apt pkg=$item state=installed
      with_items:
        - git-core
        - libcurl4-openssl-dev
        - libfreetype6
        - libfreetype6-dev
        - libjpeg62
        - libjpeg62-dev
        - libmariadbclient-dev
        - libmariadbd-dev
        - libxml2-dev
        - mysql-client
        - nginx
        - python-dev
        - python-imaging
        - python-mysqldb
        - python-pycurl
        - python-redis
        - python-setuptools
        - redis-server
        - zlib1g-dev

    - name: install pip
      action: easy_install name=pip

    - name: 1a. Add APT GPG signing key
      apt_key: url=http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xCBCB082A1BB943DB state=present

    - name: 1b. Add APT repository
      apt_repository: repo='deb http://ftp.osuosl.org/pub/mariadb/repo/10.0/ubuntu $ansible_distribution_release main' state=present update_cache=yes
      
    - name: 1c. Install MariaDB server package
      apt: name=mariadb-server state=present

    - name: 2. Start Mysql Service
      service: name=mysql state=started enabled=true

    - name: Install python Mysql package #required for mysql_db tasks
      apt: name=python-mysqldb state=present

    - name: install pip
      action: easy_install name=pip

    - name: install various libraries with pip
      action: pip name=$item state=present
      with_items:
        - virtualenv
        - supervisor
        - uwsgi

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libfreetype.so dest=/usr/lib/libfreetype.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libz.so dest=/usr/lib/libz.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libjpeg.so.62 dest=/usr/lib/x86_64-linux-gnu/libjpeg.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libjpeg.so dest=/usr/lib/libjpeg.so state=link


    - name: create nginx site config
      action: template src=templates/nginx_site.conf dest=/etc/nginx/sites-available/${app_name}.conf
      notify:
        - restart nginx

    - name: link nginx config
      action: file src=/etc/nginx/sites-available/${app_name}.conf dest=/etc/nginx/sites-enabled/${app_name}.conf state=link

    - name: create supervisord config folder
      action: file dest=/etc/supervisor state=directory owner=root

    - name: create supervisord config
      action: template src=templates/supervisord.conf dest=/etc/supervisord.conf

    - name: create supervisord init script
      action: template src=templates/supervisord.sh dest=/etc/init.d/supervisord mode=0755

    - name: start supervisord service and have it run during system startup
      action: service name=supervisord state=started enabled=yes


    - name: create webapps directory
      action: file dest=/srv/webapps state=directory


  handlers:
    - name: restart maria
      action: service name=mysql state=restarted

    - name: restart supervisord
      action: service name=supervisord state=restarted
